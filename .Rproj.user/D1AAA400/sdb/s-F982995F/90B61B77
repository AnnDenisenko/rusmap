{
    "contents" : "#' Several chosen regions\n#'\n#' Computes the chosen regions in JPEG file \n#'\n#' Each region will be imaged in single cell of matrix of a given size. \n#' @param layer - SpatialPolygonsDataFrame file.\n#' regions - a character vector naming one of more regions, as in layer.\n#' outname - name of JPEG file.\n#' q - quality of image.  \n#' x - number of images in the vertical.\n#' y - number of images in the horizontal.\n#' t - size of text.\n#' @return JPEG file with chosen regions. \n#' @export\n#' @examples \n#' map <- readOGR(dsn = \"data\", layer = \"map_1\")\n#' regions.matrix(layer = map, regions = c(\"Tuva\", \"Kemerovo\"), outname = \"First.jpeg\")\n#' regions.matrix(layer = map, regions = c(\"Tuva\", \"Kemerovo\"), outname = \"Second.jpeg\", q = 50)\n#' regions.matrix(layer = map, regions = c(\"Tuva\", \"Kemerovo\"), outname = \"Third.jpeg\", q = 200, x = 10)\n\nreg.matrix <- function(layer, regions, \n                           outname = \"matrix_with_regions.jpeg\", q = 1000,\n                           x = 3, y = 3, t=5){\n  jpeg(filename = outname, width = 1200, height = 600, quality = q)  \n  pushViewport(viewport(layout = grid.layout(x, y)))\n  \n  j=0\n  \n  map_f = fortify(layer)\n  layer$id = as.character( c(1:nrow(layer@data)))\n  map_f = left_join(map_f, layer@data) \n  \n  for (i in regions)\n  {\n    j=j+1\n    msk = subset(map_f, NAME_1==i)\n    cnames = aggregate(cbind(long, lat, group) ~ NAME_1, data=msk, \n                        FUN=function(x)mean(range(x)))\n    \n    p = ggplot(msk, aes(long, lat, group = group)) +\n      geom_polygon(fill=\"gold\", alpha = 0.6, linetype=0) +\n      coord_equal() +\n      geom_polygon(data = msk, aes(long,lat), \n                   fill=NA, \n                   color = \"darkblue\",\n                   size=0.1)+     \n      geom_text(data=cnames, aes(long, lat, group = group, label = NAME_1), size=t) + \n      theme(axis.line=element_blank(),   \n            axis.text.x=element_blank(), \n            axis.text.y=element_blank(),\n            axis.ticks=element_blank(),\n            axis.title.x=element_blank(),\n            axis.title.y=element_blank(),\n            legend.position=\"none\",\n            panel.background=element_blank())\n    #Место на листе каждой картинки\n    print(p, vp = vplayout(floor((j-1)/y)+1, (j)%%y+((j)%%y==0)*y))\n  }\n  #Выгрузим картинку. \n  dev.off()\n}\n\n#' Several chosen regions with smaller administrarive division\n#'\n#' Computes the chosen regions in JPEG file \n#'\n#' Each region will be imaged in single cell of matrix of a given size. \n#' @param layer_2 - SpatialPolygonsDataFrame file with smaller administrative division.\n#' regions - a character vector naming one of more regions, as in layer_2.\n#' outname - name of JPEG file.\n#' q - quality of image.  \n#' x - number of images in the vertical.\n#' y - number of images in the horizontal.\n#' t - size of text.\n#' @return JPEG file with chosen regions. \n#' @export\n#' @examples \n#' map <- readOGR(dsn = \"data\", layer_2 = \"map_2\")\n#' regions.matrix(layer_2 = map_2, regions = c(\"Tuva\", \"Tomsk\"), outname = \"First.jpeg\")\n#' regions.matrix(layer_2 = map_2, regions = c(\"Tuva\", \"Tomsk\"), outname = \"Second.jpeg\", q = 50)\n#' regions.matrix(layer_2 = map_2, regions = c(\"Tuva\", \"Tomsk\"), outname = \"Third.jpeg\", q = 200, x = 10)\n\nreg.matrix.small <- function(layer_2, regions, \n                           outname = \"matrix_with_regions.jpeg\", q = 60000,\n                           x = 3, y = 3, t = 2){\n  jpeg(filename = outname, width = 1200, height = 600, quality = q)  \n  pushViewport(viewport(layout = grid.layout(x, y)))\n  \n  j=0\n  \n  map_f = fortify(layer_2)\n  layer_2$id = as.character( c(1:nrow(layer_2@data)))\n  map_f = left_join(map_f, layer_2@data) \n  \n  for (i in regions)\n  {\n    j=j+1\n    msk = subset(map_f, NAME_1==i)\n    cnames = aggregate(cbind(long, lat, group) ~ NAME_2, data=msk, \n                       FUN=function(x)mean(range(x)))\n    \n    p = ggplot(msk, aes(long, lat, group = group)) +\n      geom_polygon(fill=\"gold\", alpha = 0.6, linetype=0) +\n      coord_equal() +\n      geom_polygon(data = msk, aes(long,lat), \n                   fill=NA, \n                   color = \"darkblue\",\n                   size=0.1)+     \n      geom_text(data=cnames, aes(long, lat, group = group, label = NAME_2), size=t) + \n      theme(axis.line=element_blank(),   \n            axis.text.x=element_blank(), \n            axis.text.y=element_blank(),\n            axis.ticks=element_blank(),\n            axis.title.x=element_blank(),\n            axis.title.y=element_blank(),\n            legend.position=\"none\",\n            panel.background=element_blank())\n    #Место на листе каждой картинки\n    print(p, vp = vplayout(floor((j-1)/y)+1, (j)%%y+((j)%%y==0)*y))\n  }\n  #Выгрузим картинку. \n  dev.off()\n}\n\n",
    "created" : 1432928139480.000,
    "dirty" : false,
    "encoding" : "UTF8",
    "folds" : "",
    "hash" : "880882592",
    "id" : "90B61B77",
    "lastKnownWriteTime" : 1433538008,
    "path" : "~/GitHub/rusmap/R/rusmapwithmatrix.R",
    "project_path" : "R/rusmapwithmatrix.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}